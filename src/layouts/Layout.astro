---
import { ThemeSelector } from "@/components/client"

import "./font-awesome.scss"
import "./Layout.pcss"

export interface Props {
  description?: string
  ogPublishedTime?: Date
  ogType?: string
  postReturnUrl?: string
  title?: string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const siteTitle = "Reupen’s blog"
const siteAuthor = "Reupen Shah"
const {
  description,
  postReturnUrl,
  ogPublishedTime,
  title,
  ogType = "website",
  ...rest
} = Astro.props

const computedTitle =
  title && title !== siteTitle ? `${title} – ${siteTitle}` : siteTitle
---

<html class="auto" lang="en" {...rest}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="/favicon.svg" rel="icon" type="image/svg+xml" />
    <link href={new URL("sitemap-index.xml", Astro.site)} rel="sitemap" />
    <link href={canonicalURL} rel="canonical" />
    <link
      href={new URL("rss.xml", Astro.site)}
      rel="alternate"
      title={siteTitle}
      type="application/rss+xml"
    />
    <title>{computedTitle}</title>
    <meta name="generator" content={Astro.generator} />
    {description && <meta name="description" content={description} />}
    <meta property="og:title" content={computedTitle} />
    <meta property="og:site_name" content={siteTitle} />
    {description && <meta property="og:description" content={description} />}
    <meta property="og:type" content={ogType} />
    {
      ogPublishedTime && (
        <meta
          property="article:published_time"
          content={ogPublishedTime.toISOString()}
        />
      )
    }
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:creator" content={siteAuthor} />
    <meta name="twitter:title" content={computedTitle} />
    {description && <meta name="twitter:description" content={description} />}
  </head>
  <body class="blog">
    <header>
      <nav class="container">
        {
          (
            <a class:list={[Astro.url.pathname === "/" && "hidden"]} href="/">
              Reupen’s blog
            </a>
          )
        }
        {
          postReturnUrl && (
            <a class="small no-print" href={postReturnUrl}>
              <i aria-hidden="true" class="fa-solid fa-chevron-left" />
              All posts
            </a>
          )
        }
        <ThemeSelector client:only="react" className="right no-print" />
      </nav>
    </header>
    <main><slot /></main>
    <footer class="no-print">
      <ul class="container">
        <li>
          <a href={new URL("rss.xml", Astro.site)}>
            <i aria-hidden="true" class="fa-solid fa-rss"></i>
            RSS
          </a>
        </li>
        <li>
          <a href="https://github.com/reupen/blog.yuo.be">
            <i aria-hidden="true" class="fa-brands fa-github"></i>
            Source
          </a>
        </li>
      </ul>
    </footer>
  </body>

  <style>
    footer,
    header {
      font-weight: 500;
      overflow-x: auto;
    }

    header nav,
    footer ul {
      display: flex;
      align-items: baseline;
      gap: 1rem;
      flex-wrap: wrap;
      text-wrap: nowrap;
    }

    header {
      background: var(--nav-background);
      font-family: var(--sans-serif-font-family);
      font-size: 20px;
      padding: 0.75rem 1.5rem;

      a {
        color: var(--nav-text-colour);
        text-decoration-line: none;

        &:hover {
          text-decoration-line: underline;
        }
      }

      nav {
        .right {
          margin-left: auto;
        }

        .small {
          font-size: 16px;
        }
      }
    }

    footer {
      font-family: var(--sans-serif-font-family);
      font-size: 16px;
      padding: 0.75rem 1.5rem 1.25rem;

      @media (min-width: calc(700px + 3rem)) {
        padding: 1rem 1.5rem 1.75rem;
      }

      ul {
        list-style: none;
        padding: 0;
      }

      li {
        display: inline;
        padding: 0;
        margin: 0;
        line-height: inherit;
      }

      a:not(:hover) {
        &,
        i {
          text-decoration-line: none;
        }
      }
    }
  </style>
</html>

<script>
  document.documentElement.className = localStorage.getItem("theme") ?? "auto"
</script>

---
import "./font-awesome.scss"
import "./Layout.pcss"

export interface Props {
  description?: string
  ogPublishedTime?: Date
  ogType?: string
  postReturnUrl?: string
  title?: string
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const siteTitle = "Reupen’s blog"
const siteAuthor = "Reupen Shah"
const {
  title,
  description,
  postReturnUrl,
  ogPublishedTime,
  ogType = "website",
  ...rest
} = Astro.props

const computedTitle =
  title && title !== siteTitle ? `${title} – ${siteTitle}` : siteTitle
---

<html lang="en" {...rest}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link href="/favicon.svg" rel="icon" type="image/svg+xml" />
    <link href={new URL("sitemap-index.xml", Astro.site)} rel="sitemap" />
    <link href={canonicalURL} rel="canonical" />
    <link
      href={new URL("rss.xml", Astro.site)}
      rel="alternate"
      title={siteTitle}
      type="application/rss+xml"
    />
    <title>{computedTitle}</title>
    <meta name="generator" content={Astro.generator} />
    {description && <meta name="description" content={description} />}
    <meta property="og:title" content={computedTitle} />
    <meta property="og:site_name" content={siteTitle} />
    {description && <meta property="og:description" content={description} />}
    <meta property="og:type" content={ogType} />
    {
      ogPublishedTime && (
        <meta
          property="article:published_time"
          content={ogPublishedTime.toISOString()}
        />
      )
    }
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:creator" content={siteAuthor} />
    <meta name="twitter:title" content={computedTitle} />
    {description && <meta name="twitter:description" content={description} />}
  </head>
  <body>
    <header>
      <nav class="container">
        {
          (
            <a class:list={[Astro.url.pathname === "/" && "hidden"]} href="/">
              Reupen’s blog
            </a>
          )
        }
        {
          postReturnUrl && (
            <a class="small" href={postReturnUrl}>
              <i class="fa-solid fa-chevron-left" />
              All posts
            </a>
          )
        }
        <a class="small right" href={new URL("rss.xml", Astro.site)}>
          <i class="fa-solid fa-rss"></i>
          RSS
        </a>
      </nav>
    </header>
    <section class="section">
      <div class="container">
        <main><slot /></main>
      </div>
    </section>
  </body>

  <style>
    header {
      background: #000;
      font-family: var(--sans-serif-font-family);
      font-size: 20px;
      font-weight: 500;
      padding: 0.75rem 1.5rem;

      a {
        color: #fff;
        text-decoration: none;

        &:hover {
          text-decoration: underline;
          text-decoration-thickness: 12%;
        }
      }

      nav {
        display: flex;
        align-items: baseline;
        column-gap: 1rem;
        justify-content: space-between;

        i {
          text-decoration: inherit;
        }

        .right {
          margin-left: auto;
        }

        .small {
          font-size: 16px;
        }
      }
    }
  </style>
</html>

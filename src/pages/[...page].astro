---
import type { PaginateFunction } from "astro"
import { format } from "date-fns"

import Pagination from "@/components/Pagination.astro"
import Layout from "@/layouts/Layout.astro"
import { getPosts } from "@/lib"

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const posts = await getPosts()

  return paginate(posts, { pageSize: 20 })
}

const { page } = Astro.props
const description = "My personal blog, full of random musings"
---

<Layout
  description={description}
  title={page.currentPage > 1 ? `Page ${page.currentPage}` : undefined}
>
  <h1>
    {
      page.currentPage > 1 ? (
        <>Posts (page {page.currentPage})</>
      ) : (
        <>Reupenâ€™s blog</>
      )
    }
  </h1>
  {
    page.data.map((post, index) => (
      <>
        {(post.isNewMonth || index === 0) && (
          <h2>
            {format(post.data.date, "MMMM yyyy")}
            {index === 0 && !post.isNewMonth && " (continued)"}
          </h2>
        )}
        <ol>
          <li id={post.slug}>
            <a href={`/${post.data.slugPrefix}/${post.slug}/`}>
              {post.data.title}
            </a>
            <p>{post.data.excerpt}</p>
          </li>
        </ol>
      </>
    ))
  }
  <Pagination
    entryName="posts"
    nextHref={page.url.next}
    previousHref={page.url.prev}
  />

  <style>
    ol {
      list-style: none;
      padding: 0;
    }

    li {
      padding-left: 0;
      margin-bottom: 1rem;
      line-height: 1.7;

      a {
        font-size: 22px;
        font-family: var(--sans-serif-font-family);
        font-weight: 600;
      }

      p {
        font-size: 18px;
        margin-top: 0.25rem;
        line-height: 1.7;
      }
    }
  </style>
</Layout>
